"2-matrix_divided" module
======================

using "matrix_divided"
-----------------------

Import the function:


	>>> matrix_divided = __import__('2-matrix_divided').matrix_divided
	
Now test it:

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 3)
	[[0.33, 0.67, 1.0], [1.33, 1.67, 2.0]]

	>>> matrix_divided([[1, 2, 3], [4, 5, 6]], 0)
	Traceback (most recent call last):
	ZeroDivisionError: division by zero

	>>> matrix_divided([[1, 2, 'x'], [4, 5, 6]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[1, 2], [4, 5, 6]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, 5]], 3)
	Traceback (most recent call last):
	TypeError: Each row of the matrix must have the same size

	>>> matrix_divided([[1, 2, 3], [4, 5, 'x']], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([[3, "9"], [15, 3]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided([["Hello", "Holberton"], [15, 3]], 3)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix_divided()
	Traceback (most recent call last):
	TypeError: matrix_divided() missing 2 required positional arguments: 'matrix' and 'div'

	>>> matrix_divided([[3, 4]])
    	Traceback (most recent call last):
    	TypeError: matrix_divided() missing 1 required positional argument: 'div'
	
	>>> matrix_divided("Hello", 9)
	Traceback (most recent call last):
	TypeError: matrix must be a matrix (list of lists) of integers/floats

	>>> matrix = [[3, 9], [12, 3]]
	>>> matrix_divided(matrix, "2")
	Traceback (most recent call last):
	TypeError: div must be a number

	>>> matrix_divided([[3, 9], [12, 3]], float('inf')) 
	[[0.0, 0.0], [0.0, 0.0]]
